<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>NumPy：快速创建数组（Array）</title>
      <link href="/2021/12/14/numpy-kuai-su-chuang-jian-shu-zu-array/"/>
      <url>/2021/12/14/numpy-kuai-su-chuang-jian-shu-zu-array/</url>
      
        <content type="html"><![CDATA[<h2 id="快速创建数组（Array）"><a href="#快速创建数组（Array）" class="headerlink" title="快速创建数组（Array）"></a>快速创建数组（Array）</h2><p>NumPy为Python提供了高阶数组与矩阵运算，因此数组（Array）也成为使用NumPy的最基本数据单元，本Note记录如何快速的创建数组。</p><h3 id="将Python-List转换成数组"><a href="#将Python-List转换成数组" class="headerlink" title="将Python List转换成数组"></a>将Python List转换成数组</h3><p>如果有现成的Python list，则可以直接通过numpy.array()函数将Python list转成NumPy数组。如下为一维数组实例。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npa_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>a_list<span class="token punctuation">)</span> <span class="token comment"># array([1, 2, 3, 4])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>多维数组实例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">b_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">range</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>i<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>b_list<span class="token punctuation">)</span><span class="token comment"># array([[1, 2, 3],</span><span class="token comment">#        [3, 4, 5],</span><span class="token comment">#        [5, 6, 7]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="zeros-生成全0数组"><a href="#zeros-生成全0数组" class="headerlink" title="zeros()生成全0数组"></a>zeros()生成全0数组</h3><p>dtype可以用来限制生成数组内数据类型，默认为float。如下为一维数组实例</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token comment"># array([0, 0, 0, 0, 0])</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="ones-生成全1数组"><a href="#ones-生成全1数组" class="headerlink" title="ones()生成全1数组"></a>ones()生成全1数组</h3><p>功能同zeros()，ones()可以用来生成全1数组。如下为3x5数组实例。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token comment"># array([[1, 1, 1, 1, 1],</span><span class="token comment">#        [1, 1, 1, 1, 1],</span><span class="token comment">#        [1, 1, 1, 1, 1]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="full-生成同一值数组"><a href="#full-生成同一值数组" class="headerlink" title="full()生成同一值数组"></a>full()生成同一值数组</h3><p>类似全0和全1，full()可以用来生成由同一值组成的数组。如下为3x5且每一个元素均为2.4的数组实例。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>full<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2.4</span><span class="token punctuation">)</span><span class="token comment"># array([[2.4, 2.4, 2.4, 2.4, 2.4],</span><span class="token comment">#        [2.4, 2.4, 2.4, 2.4, 2.4],</span><span class="token comment">#        [2.4, 2.4, 2.4, 2.4, 2.4]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这个数组也可以用zeros()和ones()来实现。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2.4</span><span class="token comment"># array([[2.4, 2.4, 2.4, 2.4, 2.4],</span><span class="token comment">#        [2.4, 2.4, 2.4, 2.4, 2.4],</span><span class="token comment">#        [2.4, 2.4, 2.4, 2.4, 2.4]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2.4</span><span class="token comment"># array([[2.4, 2.4, 2.4, 2.4, 2.4],</span><span class="token comment">#        [2.4, 2.4, 2.4, 2.4, 2.4],</span><span class="token comment">#        [2.4, 2.4, 2.4, 2.4, 2.4]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="arange-生成由递增数列组成的数组"><a href="#arange-生成由递增数列组成的数组" class="headerlink" title="arange()生成由递增数列组成的数组"></a>arange()生成由递增数列组成的数组</h3><p>如下实例，生成从0到18递增（增幅为2）的数组。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># array([ 0,  2,  4,  6,  8, 10, 12, 14, 16, 18])</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="linspace-生成由递增数列组成的数组"><a href="#linspace-生成由递增数列组成的数组" class="headerlink" title="linspace()生成由递增数列组成的数组"></a>linspace()生成由递增数列组成的数组</h3><p>使用arange()时，我们知道数列的增幅为多少，如果不知道增幅，可以使用lingspace()，如下实例创建一个在0到1之间均匀的生成5个值的数组。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># array([0.  , 0.25, 0.5 , 0.75, 1.  ])</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="随机值组成的数组"><a href="#随机值组成的数组" class="headerlink" title="随机值组成的数组"></a>随机值组成的数组</h3><p>使用random.random()可以生成一个均匀分布的随机值组成的数组</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># array([[0.61138824, 0.54712149, 0.40095232, 0.39771161, 0.0281933 ],</span><span class="token comment">#        [0.08123355, 0.41283792, 0.00461631, 0.12341322, 0.86842517],</span><span class="token comment">#        [0.93693765, 0.97597066, 0.30344276, 0.8472288 , 0.80629387]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>使用random.norm()可以生成一个均值为0，方差为1的正态分布的随机值组成的数组。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># array([[ 1.30565338, -1.08954521, -0.209259  ,  0.85940426,  0.68683533],</span><span class="token comment">#        [ 1.20633136,  2.57417898,  0.43243003,  0.3559354 ,  0.82257559],</span><span class="token comment">#        [-1.11870164,  0.04259074,  1.7639825 , -0.30045559,  2.50982843]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>使用random.randint()可以生成一个在给定范围内随机选择的整数组成的数组。如下实例生成一个在0（含）到10（不含）之间随机选择组成的3x5整数数组。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># array([[0, 7, 0, 9, 9],</span><span class="token comment">#        [4, 4, 8, 2, 8],</span><span class="token comment">#        [8, 2, 0, 7, 2]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="eye-生成单位矩阵"><a href="#eye-生成单位矩阵" class="headerlink" title="eye()生成单位矩阵"></a>eye()生成单位矩阵</h3><p>单位矩阵是一个对角线元素为1，其余元素均为0的矩阵。以下实例生成一个5*5的单位矩阵。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>eye<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token comment"># array([[1., 0., 0., 0., 0.],</span><span class="token comment">#        [0., 1., 0., 0., 0.],</span><span class="token comment">#        [0., 0., 1., 0., 0.],</span><span class="token comment">#        [0., 0., 0., 1., 0.],</span><span class="token comment">#        [0., 0., 0., 0., 1.]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python数据分析：导入在线范例数据集</title>
      <link href="/2021/12/13/python-shu-ju-fen-xi-dao-ru-zai-xian-fan-li-shu-ju-ji/"/>
      <url>/2021/12/13/python-shu-ju-fen-xi-dao-ru-zai-xian-fan-li-shu-ju-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="导入在线范例数据集"><a href="#导入在线范例数据集" class="headerlink" title="导入在线范例数据集"></a>导入在线范例数据集</h2><p>在做数据分析时，经常要使用范例数据集来做模型验证和演示等，其中Iris花卉数据集就是一个比较常见的统计范例数据。该数据包含150个样本，都属于Iris下面三个亚属，数据集通过记录花萼长度和宽度，花瓣长度和宽度，以及所属亚属来表征一个记录。这个数据集是公共可用的，Python的一些包也内嵌了这个数据集，我们可以通过以下方式来直接获取。</p><h3 id="pandas"><a href="#pandas" class="headerlink" title="pandas"></a>pandas</h3><p>从Pandas 0.19.2版本开始，如果知道范例数据集的URL，可以直接通过read_csv()的方式将数据集读取。以下以如何获取Iris数据集为例，更多的范例数据集的URL可以从<a href="https://vincentarelbundock.github.io/Rdatasets/datasets.html">此链接</a>获取。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdiris <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'https://raw.githubusercontent.com/mwaskom/seaborn-data/master/iris.csv'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>以上方式可能涉及到认证，也可以通过利用request包读取网页内容，然后将内容传递给pandas的方式来读取范例数据集。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> io<span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'https://raw.githubusercontent.com/mwaskom/seaborn-data/master/iris.csv'</span>url_content <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>contentiris <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>io<span class="token punctuation">.</span>StringIO<span class="token punctuation">(</span>url_content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很多Python包实际已经内嵌了Iris数据集，以下是常见的几个包以及获取Iris数据集的方式。</p><h3 id="statsmodels"><a href="#statsmodels" class="headerlink" title="statsmodels"></a>statsmodels</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> smiris <span class="token operator">=</span> sm<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>get_rdataset<span class="token punctuation">(</span><span class="token string">'iris'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="pydataset"><a href="#pydataset" class="headerlink" title="pydataset"></a>pydataset</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pydataset <span class="token keyword">import</span> datairis <span class="token operator">=</span> data<span class="token punctuation">(</span><span class="token string">'iris'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="scikit-learn"><a href="#scikit-learn" class="headerlink" title="scikit-learn"></a>scikit-learn</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> load_irisiris <span class="token operator">=</span> load_iris<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>以上导入的不是Pandas的dataframe格式，还需要通过以下代码将导出数据集转成dataframe格式。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npiris <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span> np<span class="token punctuation">.</span>c_<span class="token punctuation">[</span>iris<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> iris<span class="token punctuation">[</span><span class="token string">'target'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> columns<span class="token operator">=</span> iris<span class="token punctuation">[</span><span class="token string">'feature_names'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token string">'target'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="seaborn"><a href="#seaborn" class="headerlink" title="seaborn"></a>seaborn</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> seaborn <span class="token keyword">as</span> snsiris <span class="token operator">=</span> sns<span class="token punctuation">.</span>load_dataset<span class="token punctuation">(</span><span class="token string">'iris'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="quilt"><a href="#quilt" class="headerlink" title="quilt"></a>quilt</h3><p>更多Quilt的介绍见官网：<a href="https://docs.quiltdata.com/">Introduction - quilt (quiltdata.com)</a></p><p>在读取数据集之前，需要在shell通过quilt将数据集下载下来：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">quilt install uciml/iris<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以下即通过quilt读取范例数据集Iris的方式：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> quilt<span class="token punctuation">.</span>data<span class="token punctuation">.</span>uciml<span class="token punctuation">.</span>iris <span class="token keyword">as</span> iriris <span class="token operator">=</span> ir<span class="token punctuation">.</span>tables<span class="token punctuation">.</span>iris<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p>This note is inspired by the following references: </p><p><a href="https://stackoverflow.com/questions/28417293/sample-datasets-in-pandas">python - Sample datasets in Pandas - Stack Overflow</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pandas </tag>
            
            <tag> statsmodels </tag>
            
            <tag> pydataset </tag>
            
            <tag> seaborn </tag>
            
            <tag> scikit-learn </tag>
            
            <tag> quilt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建Python运行的虚拟环境</title>
      <link href="/2021/12/12/chuang-jian-python-yun-xing-de-xu-ni-huan-jing/"/>
      <url>/2021/12/12/chuang-jian-python-yun-xing-de-xu-ni-huan-jing/</url>
      
        <content type="html"><![CDATA[<h1 id="创建Python运行的虚拟环境"><a href="#创建Python运行的虚拟环境" class="headerlink" title="创建Python运行的虚拟环境"></a>创建Python运行的虚拟环境</h1><p>当运行不同的Python项目时，所需要的Python包可能依赖的Python版本不一致，为了“隔离”出一个Python运行环境，在不同的项目运行不同的Python版本而对全局Python版本不产生影响，虚拟环境就是一个很好的手段。</p><h2 id="创建当前Python版本的虚拟环境"><a href="#创建当前Python版本的虚拟环境" class="headerlink" title="创建当前Python版本的虚拟环境"></a>创建当前Python版本的虚拟环境</h2><p>使用<span style="background-color:  #d0d3d4">venv</span>包直接生成虚拟环境myenv</p><pre><code>python3 -m venv myenv</code></pre><p>激活该虚拟环境</p><pre><code>source myenv/bin/activate</code></pre><p>退出该虚拟环境</p><pre><code>deactivate</code></pre><h2 id="创建特定Python版本的虚拟环境"><a href="#创建特定Python版本的虚拟环境" class="headerlink" title="创建特定Python版本的虚拟环境"></a>创建特定Python版本的虚拟环境</h2><p>由于目前新的Ubuntu版本（20.04）的Python3版本都是默认3.8，如果需要创建Python 3.7或者更老版本的虚拟环境，首先需要从<a href="https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa">deadsnakes PPA</a>下载Python3.7.</p><pre><code>sudo add-apt-repository ppa:deadsnakes/ppasudo apt-get updatesudo apt-get install python3.7</code></pre><p>安装好Python 3.7以后可以开始创建虚拟环境，首先安装<span style="background-color:  #d0d3d4">virtualenv</span>包。</p><pre><code>python3.7 -m pip install virtualenv</code></pre><p>新建虚拟环境</p><pre><code>python3.7 -m virtualenv myenv</code></pre><p>激活该虚拟环境</p><pre><code>source myenv/bin/activate</code></pre><p> 退出该虚拟环境</p><pre><code> deactivate</code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为GitHub Pages上的个人博客绑定GoDaddy域名</title>
      <link href="/2021/12/11/wei-github-page-shang-de-ge-ren-bo-ke-bang-ding-godaddy-yu-ming/"/>
      <url>/2021/12/11/wei-github-page-shang-de-ge-ren-bo-ke-bang-ding-godaddy-yu-ming/</url>
      
        <content type="html"><![CDATA[<h1 id="为GitHub-Pages上的个人博客绑定GoDaddy域名"><a href="#为GitHub-Pages上的个人博客绑定GoDaddy域名" class="headerlink" title="为GitHub Pages上的个人博客绑定GoDaddy域名"></a>为GitHub Pages上的个人博客绑定GoDaddy域名</h1><p>很多人通过GitHub Pages来搭建自己的博客网站，默认的地址一般是username.github.io，这里的username一般是你GitHub的用户名。这样的地址不被记住，同时GitHub Pages也提供绑定个人域名的功能，所以如果有比较好记忆的域名可以通过GitHub Pages来绑定，通过直接访问域名的方式（而不是username.github.io）来访问挂载在GitHub上的个人博客网站。</p><p>本博客的域名在GoDaddy上购买，点击进入GoDaddy个人域名DNS配置后，将     185.199.108.153，185.199.109.153，185.199.110.153，185.199.111.153这几个IP地址加入到A记录，将个人原Github博客地址username.github.io（将username替换成个人用户名）添加到CNAME记录。针对本博客的A记录和CNAME记录如下截图。</p><p><img src="https://media.publit.io/file/Godaddy-dns.png" alt="GoDaddy DNS" title="GoDaddy DNS"></p><ul><li>A记录：将一个域名解析到一个IP地址，如上面例子即将个人域名解析到那四个配置的IP地址</li><li>CNAME记录：将一个域名解析到另外一个域名，如上面例子及将个人域名解析到username.github.io</li></ul><p>将上述配置好后，然后返回到GitHub Pages配置页，在Custom domain填上个人域名（对于本博客就是<a href="http://www.wenvenn.com/">www.wenvenn.com</a> ），点击Save以后GitHub会自动检测DNS，如果通过的话在填写的域名后面可以看到一个绿色的钩，这里建议同时勾选HTTPS。如下截图。</p><p><img src="https://media.publit.io/file/Github-custom-domain.png" alt="GitHub Pages Custom Domain" title="GitHub Pages Custom Domain"></p><p>有时候在GoDaddy上注册个人域名并配置DNS后不一定会马上生效，这里涉及到DNS广播，一般耗时几个小时，最长48个小时，个人可以通过<a href="https://dnschecker.org/">DNS Checker</a> 或者<a href="https://www.whatsmydns.net/">What’s My DNS</a> 这两个网站来查询DNS状态，如果都打钩的话说明已经OK了。</p>]]></content>
      
      
      <categories>
          
          <category> 奇淫技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> 个人网站 </tag>
            
            <tag> DNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Ubuntu上安装Markdown编辑器Remarkable</title>
      <link href="/2021/12/07/zai-ubuntu-shang-an-zhuang-markdown-bian-ji-qi-remarkable/"/>
      <url>/2021/12/07/zai-ubuntu-shang-an-zhuang-markdown-bian-ji-qi-remarkable/</url>
      
        <content type="html"><![CDATA[<h2 id="在Ubuntu上安装Markdown编辑器Remarkable"><a href="#在Ubuntu上安装Markdown编辑器Remarkable" class="headerlink" title="在Ubuntu上安装Markdown编辑器Remarkable"></a>在Ubuntu上安装Markdown编辑器Remarkable</h2><p>Remarkable是一个非常简洁，轻便的用于Linux环境下开源的Markdown编辑器，支持GitHub风格的格式，支持代码高亮，也可以将md文件转成html和pdf格式，非常适合博客文章的写作。</p><p>由于依赖文件太老或者一些其他原因，<a href="https://remarkableapp.github.io/linux.html">官方网站</a> 上下载的deb文件不能够直接在Ubuntu 20.04上安装。有大神在GitHub上提供了一个<a href="https://github.com/seiferteric/remarkable_debfix">解决方案</a> ，该方案将依赖文件重新打包生成新的deb文件，以下是详细操作：</p><pre><code>git clone https://github.com/seiferteric/remarkable_debfix.gitcd remarkable_debfix/dpkg-deb -Z xz -b old_deb remarkable_1.87_all.deb</code></pre><p>新的deb文件生成后双击即可安装，也可以通过命令行进行安装。命令行安装依赖gdebi，需要提前安装gdebi-core。</p><pre><code>sudo apt-get install gdebi-core</code></pre><p>然后再安装Remarkable 1.87</p><pre><code>sudo gdebi remarkable_1.87_all.deb </code></pre>]]></content>
      
      
      <categories>
          
          <category> 奇淫技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Remarkable </tag>
            
            <tag> Markdown </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
