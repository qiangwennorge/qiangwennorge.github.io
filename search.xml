<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Numpy：数组的基本操作</title>
      <link href="/20211216/numpy-shu-zu-de-ji-ben-cao-zuo/"/>
      <url>/20211216/numpy-shu-zu-de-ji-ben-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h2 id="数组的基本操作"><a href="#数组的基本操作" class="headerlink" title="数组的基本操作"></a>数组的基本操作</h2><p>数组生成后我们需要对数组进行一系列的操作，比如查看数组的特征，读取数组中某一个元素的值，数组切片、重组以及合并和拆分等，本Note总结这部分内容。</p><h3 id="读取数组的特征（attribute）"><a href="#读取数组的特征（attribute）" class="headerlink" title="读取数组的特征（attribute）"></a>读取数组的特征（attribute）</h3><p>数组的特征包含维度，每一维的元素个数，总的元素个数，数据类型，元素及数组占用的数据空间大小等。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment"># 生成一个均值为0，方差为1的正态分布随机数组成的3*4*5数组</span>x1 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 获取数组的维度，结果输出 3</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"x1 dimention: "</span><span class="token punctuation">,</span> x1<span class="token punctuation">.</span>ndim<span class="token punctuation">)</span><span class="token comment"># x1 dimention:  3</span><span class="token comment"># 获取数组每一维度的元素个数，结果输出（3,4,5）</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"x1 shape: "</span><span class="token punctuation">,</span> x1<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token comment"># x1 shape:  (3, 4, 5)</span><span class="token comment"># 获取数组总的元素个数，结果输出 60</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"x1 size: "</span><span class="token punctuation">,</span> x1<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token comment"># x1 size:  60</span><span class="token comment"># 获取数组的数据类型，结果输出 float64</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"x1 data type: "</span><span class="token punctuation">,</span> x1<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span><span class="token comment"># x1 data type:  float64</span><span class="token comment"># 获取数组单个元素占用的数据空间大小（单位bytes），结果输出 8 bytes</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"x1 item size: "</span><span class="token punctuation">,</span> x1<span class="token punctuation">.</span>itemsize<span class="token punctuation">)</span><span class="token comment"># x1 item size:  8</span><span class="token comment"># 获取数组总占用数据空间大小，结果输出 480 bytes</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"x1 total size: "</span><span class="token punctuation">,</span> x1<span class="token punctuation">.</span>nbytes<span class="token punctuation">)</span><span class="token comment"># x1 total size:  480</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数组索引（indexing）-读取-修改单个元素"><a href="#数组索引（indexing）-读取-修改单个元素" class="headerlink" title="数组索引（indexing）- 读取/修改单个元素"></a>数组索引（indexing）- 读取/修改单个元素</h3><p>NumPy的数组索引和Python List的索引类似，从0索引开始。以下以读取元素为例</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 生成一个含10个元素的一维随机数组</span>x2 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment"># array([0.91457994, 0.06262808, 0.36183464, 0.17594106, 0.33792884, 0.33788772, 0.91892014, 0.81608134, 0.08148799, 0.9756082 ])</span><span class="token comment"># 提取第5个元素，两种方法</span>x2<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token comment"># 0.33792883685065367</span>x2<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token comment"># 0.33792883685065367</span><span class="token comment"># 生成一个含10个元素的二维随机数组</span>x3 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># array([[0.09044767, 0.58838914, 0.68890439, 0.18176692, 0.22996167],</span><span class="token comment">#        [0.59272893, 0.11073436, 0.99616773, 0.99205917, 0.81407968]])</span><span class="token comment"># 提取第一维第4个元素</span>x3<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment"># x3[0,-2], x3[-2,3], x3[-2,-2] 也可以提取同一元素</span><span class="token comment"># 0.181766923314293</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数组切片（Slicing）"><a href="#数组切片（Slicing）" class="headerlink" title="数组切片（Slicing）"></a>数组切片（Slicing）</h3><p>NumPy数组切片也和Python List切片操作一致，x[start:stop:step]表示提取从索引start开始到索引stop截止步长为step的所有元素组成新的数组。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 生成一个从0到9总共10个元素的一维数组</span>x4 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment"># array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</span><span class="token comment"># 提取前5个元素</span>x4<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token comment"># array([0, 1, 2, 3, 4])</span><span class="token comment"># 提取后5个元素</span>x4<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment"># array([5, 6, 7, 8, 9])</span><span class="token comment"># 提取从索引3到索引6的元素</span>x4<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token comment"># array([3, 4, 5])</span><span class="token comment"># 从数组第一个元素开始隔一个元素取一个（步长为2）</span>x4<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token comment"># array([0, 2, 4, 6, 8])</span><span class="token comment"># 从数组第二个元素开始各一个元素取一个</span>x4<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token comment"># array([1, 3, 5, 7, 9])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>多维数组的切片操作与一维数组一致，只需要对每一个维度按照一维数组切片操作即可。</p><h3 id="数组重组（reshaping）"><a href="#数组重组（reshaping）" class="headerlink" title="数组重组（reshaping）"></a>数组重组（reshaping）</h3><p>比如将一个1x10的数组改成一个2x5的数组从而实现数组的重组。需要注意的是重组前后的数组大小是一样的。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 生成一个从0到9总共10个元素的一维数组</span>x5 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment"># array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</span><span class="token comment"># 重组成2x5的二维数组</span>x5<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token comment"># array([[0, 1, 2, 3, 4],</span><span class="token comment">#        [5, 6, 7, 8, 9]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数组合并（Concatenation）"><a href="#数组合并（Concatenation）" class="headerlink" title="数组合并（Concatenation）"></a>数组合并（Concatenation）</h3><p>当合并的数组具有相同的维度时，可以使用concatenate()，可以同时合并2个或2个以上数组。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 生成两个一维数组</span>x6 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment"># array([1, 2, 3])</span>x7 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token comment"># array([4, 5, 6])</span><span class="token comment"># 合并这两个数组</span>np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>x6<span class="token punctuation">,</span>x7<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># array([1, 2, 3, 4, 5, 6])</span><span class="token comment"># 生成一个二维数组</span>x8 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># array([[1, 2, 3],</span><span class="token comment">#        [4, 5, 6]])</span><span class="token comment"># 合并二维数组 (默认以第一个axis为标准合并)</span>np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>x8<span class="token punctuation">,</span> x8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># array([[1, 2, 3],</span><span class="token comment">#        [4, 5, 6],</span><span class="token comment">#        [1, 2, 3],</span><span class="token comment">#        [4, 5, 6]])</span><span class="token comment"># 以第二个axis为标准合并二维数组</span>np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>x8<span class="token punctuation">,</span> x8<span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># array([[1, 2, 3, 1, 2, 3],</span><span class="token comment">#        [4, 5, 6, 4, 5, 6]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>不同维度的数组合并时，可以使用vstack()或者hstack()，一个是垂直合并，一个是水平合并。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 生成一个二维数组</span>x9 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># array([[1, 2, 3],</span><span class="token comment">#        [4, 5, 6]])</span><span class="token comment"># 生成一个一维数组</span>x10 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># array([9, 9, 9])</span><span class="token comment"># 垂直合并这两个数组</span>np<span class="token punctuation">.</span>vstack<span class="token punctuation">(</span><span class="token punctuation">(</span>x9<span class="token punctuation">,</span>x10<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># array([[1, 2, 3],</span><span class="token comment">#        [4, 5, 6],</span><span class="token comment">#        [9, 9, 9]])</span><span class="token comment"># 生成一个二维数组</span>x11 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># array([[9],</span><span class="token comment">#        [9]])</span><span class="token comment"># 水平合并X9和X11两个数组</span>np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">(</span>x9<span class="token punctuation">,</span>x11<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># array([[1, 2, 3, 9],</span><span class="token comment">#        [4, 5, 6, 9]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Python包yfinance读取雅虎财经上的股票数据</title>
      <link href="/20211215/shi-yong-python-bao-yfinance-du-qu-ya-hu-cai-jing-shang-de-gu-piao-shu-ju/"/>
      <url>/20211215/shi-yong-python-bao-yfinance-du-qu-ya-hu-cai-jing-shang-de-gu-piao-shu-ju/</url>
      
        <content type="html"><![CDATA[<h2 id="使用Python包yfinance读取雅虎财经上的股票数据"><a href="#使用Python包yfinance读取雅虎财经上的股票数据" class="headerlink" title="使用Python包yfinance读取雅虎财经上的股票数据"></a>使用Python包yfinance读取雅虎财经上的股票数据</h2><h3 id="安装yfinance"><a href="#安装yfinance" class="headerlink" title="安装yfinance"></a>安装yfinance</h3><p><a href="https://github.com/ranaroussi/yfinance">yfinance</a>是一个使用简单但是功能强大的开源Python包，通过这个包我们可以获取在雅虎财经上列出来的包含历史数据的所有证券信息。除了通过GitHub上的源码安装外，建议使用传统的pip来安装。</p><pre><code>python3 -m pip install yfinance --upgrade --no-cache-dir</code></pre><h3 id="导入yfinance"><a href="#导入yfinance" class="headerlink" title="导入yfinance"></a>导入yfinance</h3><p>yfinance包有一个Ticker模块，可以通过该模块获取到相应证券的市场数据。以下抓取苹果公司（AAPL）的相关数据为例。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> yfinance <span class="token keyword">as</span> yfaapl <span class="token operator">=</span> yf<span class="token punctuation">.</span>Ticker<span class="token punctuation">(</span><span class="token string">'AAPL'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>aapl<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>yfinance.Ticker object &lt;AAPL&gt;</code></pre><h3 id="获取股票所对应信息-info"><a href="#获取股票所对应信息-info" class="headerlink" title="获取股票所对应信息 - info"></a>获取股票所对应信息 - info</h3><p>调用Ticker对象的info函数可以获取该股票的所有信息，返回一个dictionary结构数据，里面包含比如该公司所属sector，员工数，所在城市，和各种财务表现等。由于整个dictionary比较大，下面只选择打印了几个信息。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_info <span class="token operator">=</span> aapl<span class="token punctuation">.</span>info<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'AAPL sector: '</span><span class="token punctuation">,</span> aapl_info<span class="token punctuation">[</span><span class="token string">'sector'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'AAPL EBITA Margins: '</span><span class="token punctuation">,</span> aapl_info<span class="token punctuation">[</span><span class="token string">'ebitdaMargins'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'AAPL Profit Margins: '</span><span class="token punctuation">,</span> aapl_info<span class="token punctuation">[</span><span class="token string">'profitMargins'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'AAPL Gross Margins: '</span><span class="token punctuation">,</span> aapl_info<span class="token punctuation">[</span><span class="token string">'grossMargins'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'AAPL Day High: '</span><span class="token punctuation">,</span> aapl_info<span class="token punctuation">[</span><span class="token string">'dayHigh'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>AAPL sector:  TechnologyAAPL EBITA Margins:  0.32867AAPL Profit Margins:  0.25882AAPL Gross Margins:  0.41779AAPL Day High:  177.725</code></pre><h3 id="获取股票历史数据-history"><a href="#获取股票历史数据-history" class="headerlink" title="获取股票历史数据 - history"></a>获取股票历史数据 - history</h3><p>调用history函数可以获取到该股票的历史数据。该函数有以下几个参数可供配置。</p><ul><li>period，表示获取多久的数据，有10种选择：1d, 5d, 1mo, 3mo, 6mo, 1y, 2y, 5y, 10y, ytd, max。</li><li>interval，表示数据的精度，有13种选择：1m, 2m, 5m, 15m, 30m, 60m, 90m, 1h, 1d, 5d, 1wk, 1mo, 3mo。天以内的数据只能最多采集60天以内的，精度越高，能采集的数据天数更少，比如1m数据只能采集7天以内的。</li><li>start，如果没有配置period，也可以使用start即数据开始时间和end即数据结束时间来定义应该获取多久的数据</li><li>end，同上</li><li>prepost，是否包含盘前和盘后价格，默认False不包含</li><li>auto_adjust，是否按照美国线（英语：Open-High-Low-Close chart，OHLC chart）来调整，含开盘价、最高价、最低价、收盘价，默认True</li><li>actions，是否包含分红和扩股信息，默认包含</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 获取AAPL所有的历史数据，并打印最开始5天的记录</span>aapl_history_max <span class="token operator">=</span> aapl<span class="token punctuation">.</span>history<span class="token punctuation">(</span>period<span class="token operator">=</span><span class="token string">'max'</span><span class="token punctuation">)</span>aapl_history_max<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Open</th>      <th>High</th>      <th>Low</th>      <th>Close</th>      <th>Volume</th>      <th>Dividends</th>      <th>Stock Splits</th>    </tr>    <tr>      <th>Date</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>1980-12-12</th>      <td>0.100453</td>      <td>0.100890</td>      <td>0.100453</td>      <td>0.100453</td>      <td>469033600</td>      <td>0.0</td>      <td>0.0</td>    </tr>    <tr>      <th>1980-12-15</th>      <td>0.095649</td>      <td>0.095649</td>      <td>0.095213</td>      <td>0.095213</td>      <td>175884800</td>      <td>0.0</td>      <td>0.0</td>    </tr>    <tr>      <th>1980-12-16</th>      <td>0.088661</td>      <td>0.088661</td>      <td>0.088224</td>      <td>0.088224</td>      <td>105728000</td>      <td>0.0</td>      <td>0.0</td>    </tr>    <tr>      <th>1980-12-17</th>      <td>0.090408</td>      <td>0.090845</td>      <td>0.090408</td>      <td>0.090408</td>      <td>86441600</td>      <td>0.0</td>      <td>0.0</td>    </tr>    <tr>      <th>1980-12-18</th>      <td>0.093029</td>      <td>0.093466</td>      <td>0.093029</td>      <td>0.093029</td>      <td>73449600</td>      <td>0.0</td>      <td>0.0</td>    </tr>  </tbody></table></div><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 获取AAPL从2021年12月1日到2021年12月15日精度为2分钟的历史数据，并打印最开始的5条记录。</span>aapl_history_1m <span class="token operator">=</span> aapl<span class="token punctuation">.</span>history<span class="token punctuation">(</span>start<span class="token operator">=</span><span class="token string">"2021-12-01"</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">"2021-12-15"</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token string">"2m"</span><span class="token punctuation">)</span>aapl_history_1m<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Open</th>      <th>High</th>      <th>Low</th>      <th>Close</th>      <th>Volume</th>      <th>Dividends</th>      <th>Stock Splits</th>    </tr>    <tr>      <th>Datetime</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2021-12-01 09:30:00-05:00</th>      <td>166.839996</td>      <td>167.095901</td>      <td>166.559998</td>      <td>166.845001</td>      <td>7578140</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>2021-12-01 09:32:00-05:00</th>      <td>166.845001</td>      <td>166.990005</td>      <td>166.429993</td>      <td>166.429993</td>      <td>1212147</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>2021-12-01 09:34:00-05:00</th>      <td>166.242203</td>      <td>166.500000</td>      <td>166.139999</td>      <td>166.259995</td>      <td>1304022</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>2021-12-01 09:36:00-05:00</th>      <td>166.250000</td>      <td>166.800003</td>      <td>166.089996</td>      <td>166.468796</td>      <td>1390514</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>2021-12-01 09:38:00-05:00</th>      <td>167.000000</td>      <td>167.419907</td>      <td>167.000000</td>      <td>167.399994</td>      <td>1572092</td>      <td>0</td>      <td>0</td>    </tr>  </tbody></table></div><h3 id="获取股票的分红和扩股数据-actions"><a href="#获取股票的分红和扩股数据-actions" class="headerlink" title="获取股票的分红和扩股数据 - actions"></a>获取股票的分红和扩股数据 - actions</h3><p>其实在获取历史数据的时候我们就可以直接获取到股票的分红和扩股数据，但是并不是每一条历史数据上都有分红或者扩股，使用actions函数可以直接获取到该信息。结合上面的历史数据信息我们可以看到AAPL在1980年发行以后到1987年5月11日才开始第一次分红，同年的6月16日开始第一次扩股。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_actions <span class="token operator">=</span> aapl<span class="token punctuation">.</span>actionsaapl_actions<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Dividends</th>      <th>Stock Splits</th>    </tr>    <tr>      <th>Date</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>1987-05-11</th>      <td>0.000536</td>      <td>0.0</td>    </tr>    <tr>      <th>1987-06-16</th>      <td>0.000000</td>      <td>2.0</td>    </tr>    <tr>      <th>1987-08-10</th>      <td>0.000536</td>      <td>0.0</td>    </tr>    <tr>      <th>1987-11-17</th>      <td>0.000714</td>      <td>0.0</td>    </tr>    <tr>      <th>1988-02-12</th>      <td>0.000714</td>      <td>0.0</td>    </tr>  </tbody></table></div><h4 id="获取股票的分红数据-dividends"><a href="#获取股票的分红数据-dividends" class="headerlink" title="获取股票的分红数据 - dividends"></a>获取股票的分红数据 - dividends</h4><p>actions函数的返回结果同时记录了分红和扩股信息，如果只想看分红信息，可以直接使用dividends。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_dividends <span class="token operator">=</span> aapl<span class="token punctuation">.</span>dividendsaapl_dividends<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>Date1987-05-11    0.0005361987-08-10    0.0005361987-11-17    0.0007141988-02-12    0.0007141988-05-16    0.000714Name: Dividends, dtype: float64</code></pre><h4 id="获取股票的分红数据-splits"><a href="#获取股票的分红数据-splits" class="headerlink" title="获取股票的分红数据 - splits"></a>获取股票的分红数据 - splits</h4><p>actions函数的返回结果同时记录了分红和扩股信息，如果只想看扩股信息，可以直接使用splits。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_splits <span class="token operator">=</span> aapl<span class="token punctuation">.</span>splitsaapl_splits<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>Date1987-06-16    2.02000-06-21    2.02005-02-28    2.02014-06-09    7.02020-08-31    4.0Name: Stock Splits, dtype: float64</code></pre><h3 id="获取重要持股人信息-major-holders"><a href="#获取重要持股人信息-major-holders" class="headerlink" title="获取重要持股人信息 - major_holders"></a>获取重要持股人信息 - major_holders</h3><p>可以看到AAPL主要由机构持股。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_major_holders <span class="token operator">=</span> aapl<span class="token punctuation">.</span>major_holdersaapl_major_holders<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0.07%</td>      <td>% of Shares Held by All Insider</td>    </tr>    <tr>      <th>1</th>      <td>58.81%</td>      <td>% of Shares Held by Institutions</td>    </tr>    <tr>      <th>2</th>      <td>58.86%</td>      <td>% of Float Held by Institutions</td>    </tr>    <tr>      <th>3</th>      <td>4959</td>      <td>Number of Institutions Holding Shares</td>    </tr>  </tbody></table></div><h4 id="获取重要机构持股人信息-institutional-holders"><a href="#获取重要机构持股人信息-institutional-holders" class="headerlink" title="获取重要机构持股人信息 - institutional_holders"></a>获取重要机构持股人信息 - institutional_holders</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_institutional_holders <span class="token operator">=</span> aapl<span class="token punctuation">.</span>institutional_holdersaapl_institutional_holders<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Holder</th>      <th>Shares</th>      <th>Date Reported</th>      <th>% Out</th>      <th>Value</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Vanguard Group, Inc. (The)</td>      <td>1266332667</td>      <td>2021-09-29</td>      <td>0.0772</td>      <td>179186072380</td>    </tr>    <tr>      <th>1</th>      <td>Blackrock Inc.</td>      <td>1026223983</td>      <td>2021-09-29</td>      <td>0.0626</td>      <td>145210693594</td>    </tr>    <tr>      <th>2</th>      <td>Berkshire Hathaway, Inc</td>      <td>887135554</td>      <td>2021-09-29</td>      <td>0.0541</td>      <td>125529680891</td>    </tr>    <tr>      <th>3</th>      <td>State Street Corporation</td>      <td>622163541</td>      <td>2021-09-29</td>      <td>0.0379</td>      <td>88036141051</td>    </tr>    <tr>      <th>4</th>      <td>FMR, LLC</td>      <td>350617759</td>      <td>2021-09-29</td>      <td>0.0214</td>      <td>49612412898</td>    </tr>  </tbody></table></div><h4 id="获取共同基金持股人信息-mutualfund-holders"><a href="#获取共同基金持股人信息-mutualfund-holders" class="headerlink" title="获取共同基金持股人信息 - mutualfund_holders"></a>获取共同基金持股人信息 - mutualfund_holders</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_mutualfund_holders <span class="token operator">=</span> aapl<span class="token punctuation">.</span>mutualfund_holdersaapl_mutualfund_holders<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Holder</th>      <th>Shares</th>      <th>Date Reported</th>      <th>% Out</th>      <th>Value</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Vanguard Total Stock Market Index Fund</td>      <td>443797660</td>      <td>2021-09-29</td>      <td>0.0271</td>      <td>62797368890</td>    </tr>    <tr>      <th>1</th>      <td>Vanguard 500 Index Fund</td>      <td>329777051</td>      <td>2021-09-29</td>      <td>0.0201</td>      <td>46663452716</td>    </tr>    <tr>      <th>2</th>      <td>SPDR S&amp;P 500 ETF Trust</td>      <td>166047529</td>      <td>2021-09-29</td>      <td>0.0101</td>      <td>23495725353</td>    </tr>    <tr>      <th>3</th>      <td>Fidelity 500 Index Fund</td>      <td>152173622</td>      <td>2021-10-30</td>      <td>0.0093</td>      <td>22795608575</td>    </tr>    <tr>      <th>4</th>      <td>Invesco ETF Tr-Invesco QQQ Tr, Series 1 ETF</td>      <td>145254426</td>      <td>2021-10-30</td>      <td>0.0089</td>      <td>21759113014</td>    </tr>  </tbody></table></div><h3 id="获取详细财务信息"><a href="#获取详细财务信息" class="headerlink" title="获取详细财务信息"></a>获取详细财务信息</h3><h4 id="当季财年信息-calendar"><a href="#当季财年信息-calendar" class="headerlink" title="当季财年信息 - calendar"></a>当季财年信息 - calendar</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_calendar <span class="token operator">=</span> aapl<span class="token punctuation">.</span>calendaraapl_calendar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>    </tr>  </thead>  <tbody>    <tr>      <th>Earnings Date</th>      <td>2022-01-25 21:00:00</td>      <td>2022-01-31 21:00:00</td>    </tr>    <tr>      <th>Earnings Average</th>      <td>1.88</td>      <td>1.88</td>    </tr>    <tr>      <th>Earnings Low</th>      <td>1.75</td>      <td>1.75</td>    </tr>    <tr>      <th>Earnings High</th>      <td>1.97</td>      <td>1.97</td>    </tr>    <tr>      <th>Revenue Average</th>      <td>118137000000</td>      <td>118137000000</td>    </tr>    <tr>      <th>Revenue Low</th>      <td>111806000000</td>      <td>111806000000</td>    </tr>    <tr>      <th>Revenue High</th>      <td>121303000000</td>      <td>121303000000</td>    </tr>  </tbody></table></div><h4 id="年度营业收入和税后收益-earnings"><a href="#年度营业收入和税后收益-earnings" class="headerlink" title="年度营业收入和税后收益 - earnings"></a>年度营业收入和税后收益 - earnings</h4><p>只显示最近四次财务统计期</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_earnings <span class="token operator">=</span> aapl<span class="token punctuation">.</span>earningsaapl_earnings<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Revenue</th>      <th>Earnings</th>    </tr>    <tr>      <th>Year</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2018</th>      <td>265595000000</td>      <td>59531000000</td>    </tr>    <tr>      <th>2019</th>      <td>260174000000</td>      <td>55256000000</td>    </tr>    <tr>      <th>2020</th>      <td>274515000000</td>      <td>57411000000</td>    </tr>    <tr>      <th>2021</th>      <td>365817000000</td>      <td>94680000000</td>    </tr>  </tbody></table></div><h4 id="季度营业收入和税后收益-quarterly-earnings"><a href="#季度营业收入和税后收益-quarterly-earnings" class="headerlink" title="季度营业收入和税后收益 - quarterly_earnings"></a>季度营业收入和税后收益 - quarterly_earnings</h4><p>只显示最近四次财务统计期</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_quarterly_earnings <span class="token operator">=</span> aapl<span class="token punctuation">.</span>quarterly_earningsaapl_quarterly_earnings<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Revenue</th>      <th>Earnings</th>    </tr>    <tr>      <th>Quarter</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>4Q2020</th>      <td>111439000000</td>      <td>28755000000</td>    </tr>    <tr>      <th>1Q2021</th>      <td>89584000000</td>      <td>23630000000</td>    </tr>    <tr>      <th>2Q2021</th>      <td>81434000000</td>      <td>21744000000</td>    </tr>    <tr>      <th>3Q2021</th>      <td>83360000000</td>      <td>20551000000</td>    </tr>  </tbody></table></div><h4 id="年度详细财报-financials"><a href="#年度详细财报-financials" class="headerlink" title="年度详细财报 - financials"></a>年度详细财报 - financials</h4><p>只显示最近四个财务统计期</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_financials <span class="token operator">=</span> aapl<span class="token punctuation">.</span>financialsaapl_financials<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>2021-09-25</th>      <th>2020-09-26</th>      <th>2019-09-28</th>      <th>2018-09-29</th>    </tr>  </thead>  <tbody>    <tr>      <th>Research Development</th>      <td>21914000000.0</td>      <td>18752000000.0</td>      <td>16217000000.0</td>      <td>14236000000.0</td>    </tr>    <tr>      <th>Effect Of Accounting Charges</th>      <td>None</td>      <td>None</td>      <td>None</td>      <td>None</td>    </tr>    <tr>      <th>Income Before Tax</th>      <td>109207000000.0</td>      <td>67091000000.0</td>      <td>65737000000.0</td>      <td>72903000000.0</td>    </tr>    <tr>      <th>Minority Interest</th>      <td>None</td>      <td>None</td>      <td>None</td>      <td>None</td>    </tr>    <tr>      <th>Net Income</th>      <td>94680000000.0</td>      <td>57411000000.0</td>      <td>55256000000.0</td>      <td>59531000000.0</td>    </tr>    <tr>      <th>Selling General Administrative</th>      <td>21973000000.0</td>      <td>19916000000.0</td>      <td>18245000000.0</td>      <td>16705000000.0</td>    </tr>    <tr>      <th>Gross Profit</th>      <td>152836000000.0</td>      <td>104956000000.0</td>      <td>98392000000.0</td>      <td>101839000000.0</td>    </tr>    <tr>      <th>Ebit</th>      <td>108949000000.0</td>      <td>66288000000.0</td>      <td>63930000000.0</td>      <td>70898000000.0</td>    </tr>    <tr>      <th>Operating Income</th>      <td>108949000000.0</td>      <td>66288000000.0</td>      <td>63930000000.0</td>      <td>70898000000.0</td>    </tr>    <tr>      <th>Other Operating Expenses</th>      <td>None</td>      <td>None</td>      <td>None</td>      <td>None</td>    </tr>    <tr>      <th>Interest Expense</th>      <td>-2645000000.0</td>      <td>-2873000000.0</td>      <td>-3576000000.0</td>      <td>-3240000000.0</td>    </tr>    <tr>      <th>Extraordinary Items</th>      <td>None</td>      <td>None</td>      <td>None</td>      <td>None</td>    </tr>    <tr>      <th>Non Recurring</th>      <td>None</td>      <td>None</td>      <td>None</td>      <td>None</td>    </tr>    <tr>      <th>Other Items</th>      <td>None</td>      <td>None</td>      <td>None</td>      <td>None</td>    </tr>    <tr>      <th>Income Tax Expense</th>      <td>14527000000.0</td>      <td>9680000000.0</td>      <td>10481000000.0</td>      <td>13372000000.0</td>    </tr>    <tr>      <th>Total Revenue</th>      <td>365817000000.0</td>      <td>274515000000.0</td>      <td>260174000000.0</td>      <td>265595000000.0</td>    </tr>    <tr>      <th>Total Operating Expenses</th>      <td>256868000000.0</td>      <td>208227000000.0</td>      <td>196244000000.0</td>      <td>194697000000.0</td>    </tr>    <tr>      <th>Cost Of Revenue</th>      <td>212981000000.0</td>      <td>169559000000.0</td>      <td>161782000000.0</td>      <td>163756000000.0</td>    </tr>    <tr>      <th>Total Other Income Expense Net</th>      <td>258000000.0</td>      <td>803000000.0</td>      <td>1807000000.0</td>      <td>2005000000.0</td>    </tr>    <tr>      <th>Discontinued Operations</th>      <td>None</td>      <td>None</td>      <td>None</td>      <td>None</td>    </tr>    <tr>      <th>Net Income From Continuing Ops</th>      <td>94680000000.0</td>      <td>57411000000.0</td>      <td>55256000000.0</td>      <td>59531000000.0</td>    </tr>    <tr>      <th>Net Income Applicable To Common Shares</th>      <td>94680000000.0</td>      <td>57411000000.0</td>      <td>55256000000.0</td>      <td>59531000000.0</td>    </tr>  </tbody></table></div><h4 id="季度详细财报-quarterly-financials"><a href="#季度详细财报-quarterly-financials" class="headerlink" title="季度详细财报 - quarterly_financials"></a>季度详细财报 - quarterly_financials</h4><p>只显示最近四个财务统计期</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_quarterly_financials <span class="token operator">=</span> aapl<span class="token punctuation">.</span>quarterly_financialsaapl_quarterly_financials<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>2021-09-25</th>      <th>2021-06-26</th>      <th>2021-03-27</th>      <th>2020-12-26</th>    </tr>  </thead>  <tbody>    <tr>      <th>Research Development</th>      <td>5772000000.0</td>      <td>5717000000.0</td>      <td>5262000000.0</td>      <td>5163000000.0</td>    </tr>    <tr>      <th>Effect Of Accounting Charges</th>      <td>None</td>      <td>None</td>      <td>None</td>      <td>None</td>    </tr>    <tr>      <th>Income Before Tax</th>      <td>23248000000.0</td>      <td>24369000000.0</td>      <td>28011000000.0</td>      <td>33579000000.0</td>    </tr>    <tr>      <th>Minority Interest</th>      <td>None</td>      <td>None</td>      <td>None</td>      <td>None</td>    </tr>    <tr>      <th>Net Income</th>      <td>20551000000.0</td>      <td>21744000000.0</td>      <td>23630000000.0</td>      <td>28755000000.0</td>    </tr>    <tr>      <th>Selling General Administrative</th>      <td>5616000000.0</td>      <td>5412000000.0</td>      <td>5314000000.0</td>      <td>5631000000.0</td>    </tr>    <tr>      <th>Gross Profit</th>      <td>35174000000.0</td>      <td>35255000000.0</td>      <td>38079000000.0</td>      <td>44328000000.0</td>    </tr>    <tr>      <th>Ebit</th>      <td>23786000000.0</td>      <td>24126000000.0</td>      <td>27503000000.0</td>      <td>33534000000.0</td>    </tr>    <tr>      <th>Operating Income</th>      <td>23786000000.0</td>      <td>24126000000.0</td>      <td>27503000000.0</td>      <td>33534000000.0</td>    </tr>    <tr>      <th>Other Operating Expenses</th>      <td>None</td>      <td>None</td>      <td>None</td>      <td>None</td>    </tr>    <tr>      <th>Interest Expense</th>      <td>-672000000.0</td>      <td>-665000000.0</td>      <td>-670000000.0</td>      <td>-638000000.0</td>    </tr>    <tr>      <th>Extraordinary Items</th>      <td>None</td>      <td>None</td>      <td>None</td>      <td>None</td>    </tr>    <tr>      <th>Non Recurring</th>      <td>None</td>      <td>None</td>      <td>None</td>      <td>None</td>    </tr>    <tr>      <th>Other Items</th>      <td>None</td>      <td>None</td>      <td>None</td>      <td>None</td>    </tr>    <tr>      <th>Income Tax Expense</th>      <td>2697000000.0</td>      <td>2625000000.0</td>      <td>4381000000.0</td>      <td>4824000000.0</td>    </tr>    <tr>      <th>Total Revenue</th>      <td>83360000000.0</td>      <td>81434000000.0</td>      <td>89584000000.0</td>      <td>111439000000.0</td>    </tr>    <tr>      <th>Total Operating Expenses</th>      <td>59574000000.0</td>      <td>57308000000.0</td>      <td>62081000000.0</td>      <td>77905000000.0</td>    </tr>    <tr>      <th>Cost Of Revenue</th>      <td>48186000000.0</td>      <td>46179000000.0</td>      <td>51505000000.0</td>      <td>67111000000.0</td>    </tr>    <tr>      <th>Total Other Income Expense Net</th>      <td>-538000000.0</td>      <td>243000000.0</td>      <td>508000000.0</td>      <td>45000000.0</td>    </tr>    <tr>      <th>Discontinued Operations</th>      <td>None</td>      <td>None</td>      <td>None</td>      <td>None</td>    </tr>    <tr>      <th>Net Income From Continuing Ops</th>      <td>20551000000.0</td>      <td>21744000000.0</td>      <td>23630000000.0</td>      <td>28755000000.0</td>    </tr>    <tr>      <th>Net Income Applicable To Common Shares</th>      <td>20551000000.0</td>      <td>21744000000.0</td>      <td>23630000000.0</td>      <td>28755000000.0</td>    </tr>  </tbody></table></div><h4 id="年度资产负债表-balance-sheet"><a href="#年度资产负债表-balance-sheet" class="headerlink" title="年度资产负债表 - balance_sheet"></a>年度资产负债表 - balance_sheet</h4><p>只显示最近四个财务统计期</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_balance_sheet <span class="token operator">=</span> aapl<span class="token punctuation">.</span>balance_sheetaapl_balance_sheet<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>2021-09-25</th>      <th>2020-09-26</th>      <th>2019-09-28</th>      <th>2018-09-29</th>    </tr>  </thead>  <tbody>    <tr>      <th>Total Liab</th>      <td>2.879120e+11</td>      <td>2.585490e+11</td>      <td>2.480280e+11</td>      <td>2.585780e+11</td>    </tr>    <tr>      <th>Total Stockholder Equity</th>      <td>6.309000e+10</td>      <td>6.533900e+10</td>      <td>9.048800e+10</td>      <td>1.071470e+11</td>    </tr>    <tr>      <th>Other Current Liab</th>      <td>5.357700e+10</td>      <td>4.786700e+10</td>      <td>4.324200e+10</td>      <td>3.929300e+10</td>    </tr>    <tr>      <th>Total Assets</th>      <td>3.510020e+11</td>      <td>3.238880e+11</td>      <td>3.385160e+11</td>      <td>3.657250e+11</td>    </tr>    <tr>      <th>Common Stock</th>      <td>5.736500e+10</td>      <td>5.077900e+10</td>      <td>4.517400e+10</td>      <td>4.020100e+10</td>    </tr>    <tr>      <th>Other Current Assets</th>      <td>1.411100e+10</td>      <td>1.126400e+10</td>      <td>1.235200e+10</td>      <td>1.208700e+10</td>    </tr>    <tr>      <th>Retained Earnings</th>      <td>5.562000e+09</td>      <td>1.496600e+10</td>      <td>4.589800e+10</td>      <td>7.040000e+10</td>    </tr>    <tr>      <th>Other Liab</th>      <td>4.305000e+10</td>      <td>4.610800e+10</td>      <td>5.050300e+10</td>      <td>4.891400e+10</td>    </tr>    <tr>      <th>Treasury Stock</th>      <td>1.630000e+08</td>      <td>-4.060000e+08</td>      <td>-5.840000e+08</td>      <td>-3.454000e+09</td>    </tr>    <tr>      <th>Other Assets</th>      <td>3.876200e+10</td>      <td>3.395200e+10</td>      <td>3.297800e+10</td>      <td>2.228300e+10</td>    </tr>    <tr>      <th>Cash</th>      <td>3.494000e+10</td>      <td>3.801600e+10</td>      <td>4.884400e+10</td>      <td>2.591300e+10</td>    </tr>    <tr>      <th>Total Current Liabilities</th>      <td>1.254810e+11</td>      <td>1.053920e+11</td>      <td>1.057180e+11</td>      <td>1.159290e+11</td>    </tr>    <tr>      <th>Short Long Term Debt</th>      <td>9.613000e+09</td>      <td>8.773000e+09</td>      <td>1.026000e+10</td>      <td>8.784000e+09</td>    </tr>    <tr>      <th>Other Stockholder Equity</th>      <td>1.630000e+08</td>      <td>-4.060000e+08</td>      <td>-5.840000e+08</td>      <td>-3.454000e+09</td>    </tr>    <tr>      <th>Property Plant Equipment</th>      <td>4.952700e+10</td>      <td>4.533600e+10</td>      <td>3.737800e+10</td>      <td>4.130400e+10</td>    </tr>    <tr>      <th>Total Current Assets</th>      <td>1.348360e+11</td>      <td>1.437130e+11</td>      <td>1.628190e+11</td>      <td>1.313390e+11</td>    </tr>    <tr>      <th>Long Term Investments</th>      <td>1.278770e+11</td>      <td>1.008870e+11</td>      <td>1.053410e+11</td>      <td>1.707990e+11</td>    </tr>    <tr>      <th>Net Tangible Assets</th>      <td>6.309000e+10</td>      <td>6.533900e+10</td>      <td>9.048800e+10</td>      <td>1.071470e+11</td>    </tr>    <tr>      <th>Short Term Investments</th>      <td>2.769900e+10</td>      <td>5.292700e+10</td>      <td>5.171300e+10</td>      <td>4.038800e+10</td>    </tr>    <tr>      <th>Net Receivables</th>      <td>5.150600e+10</td>      <td>3.744500e+10</td>      <td>4.580400e+10</td>      <td>4.899500e+10</td>    </tr>    <tr>      <th>Long Term Debt</th>      <td>1.091060e+11</td>      <td>9.866700e+10</td>      <td>9.180700e+10</td>      <td>9.373500e+10</td>    </tr>    <tr>      <th>Inventory</th>      <td>6.580000e+09</td>      <td>4.061000e+09</td>      <td>4.106000e+09</td>      <td>3.956000e+09</td>    </tr>    <tr>      <th>Accounts Payable</th>      <td>5.476300e+10</td>      <td>4.229600e+10</td>      <td>4.623600e+10</td>      <td>5.588800e+10</td>    </tr>  </tbody></table></div><h4 id="季度资产负债表-quarterly-balance-sheet"><a href="#季度资产负债表-quarterly-balance-sheet" class="headerlink" title="季度资产负债表 - quarterly_balance_sheet"></a>季度资产负债表 - quarterly_balance_sheet</h4><p>只显示最近四个财务统计期</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_quarterly_balance_sheet <span class="token operator">=</span> aapl<span class="token punctuation">.</span>quarterly_balance_sheetaapl_quarterly_balance_sheet<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>2021-09-25</th>      <th>2021-06-26</th>      <th>2021-03-27</th>      <th>2020-12-26</th>    </tr>  </thead>  <tbody>    <tr>      <th>Total Liab</th>      <td>2.879120e+11</td>      <td>2.655600e+11</td>      <td>2.679800e+11</td>      <td>2.878300e+11</td>    </tr>    <tr>      <th>Total Stockholder Equity</th>      <td>6.309000e+10</td>      <td>6.428000e+10</td>      <td>6.917800e+10</td>      <td>6.622400e+10</td>    </tr>    <tr>      <th>Other Current Liab</th>      <td>5.357700e+10</td>      <td>5.130600e+10</td>      <td>5.325500e+10</td>      <td>5.589900e+10</td>    </tr>    <tr>      <th>Total Assets</th>      <td>3.510020e+11</td>      <td>3.298400e+11</td>      <td>3.371580e+11</td>      <td>3.540540e+11</td>    </tr>    <tr>      <th>Common Stock</th>      <td>5.736500e+10</td>      <td>5.498900e+10</td>      <td>5.420300e+10</td>      <td>5.174400e+10</td>    </tr>    <tr>      <th>Other Current Assets</th>      <td>1.411100e+10</td>      <td>1.364100e+10</td>      <td>1.337600e+10</td>      <td>1.368700e+10</td>    </tr>    <tr>      <th>Retained Earnings</th>      <td>5.562000e+09</td>      <td>9.233000e+09</td>      <td>1.526100e+10</td>      <td>1.430100e+10</td>    </tr>    <tr>      <th>Other Liab</th>      <td>4.305000e+10</td>      <td>3.835400e+10</td>      <td>3.985300e+10</td>      <td>4.304200e+10</td>    </tr>    <tr>      <th>Treasury Stock</th>      <td>1.630000e+08</td>      <td>5.800000e+07</td>      <td>-2.860000e+08</td>      <td>1.790000e+08</td>    </tr>    <tr>      <th>Other Assets</th>      <td>3.876200e+10</td>      <td>4.485400e+10</td>      <td>4.333900e+10</td>      <td>4.327000e+10</td>    </tr>    <tr>      <th>Cash</th>      <td>3.494000e+10</td>      <td>3.405000e+10</td>      <td>3.846600e+10</td>      <td>3.601000e+10</td>    </tr>    <tr>      <th>Total Current Liabilities</th>      <td>1.254810e+11</td>      <td>1.077540e+11</td>      <td>1.063850e+11</td>      <td>1.325070e+11</td>    </tr>    <tr>      <th>Short Long Term Debt</th>      <td>9.613000e+09</td>      <td>8.039000e+09</td>      <td>8.003000e+09</td>      <td>7.762000e+09</td>    </tr>    <tr>      <th>Other Stockholder Equity</th>      <td>1.630000e+08</td>      <td>5.800000e+07</td>      <td>-2.860000e+08</td>      <td>1.790000e+08</td>    </tr>    <tr>      <th>Property Plant Equipment</th>      <td>4.952700e+10</td>      <td>3.861500e+10</td>      <td>3.781500e+10</td>      <td>3.793300e+10</td>    </tr>    <tr>      <th>Total Current Assets</th>      <td>1.348360e+11</td>      <td>1.144230e+11</td>      <td>1.214650e+11</td>      <td>1.541060e+11</td>    </tr>    <tr>      <th>Long Term Investments</th>      <td>1.278770e+11</td>      <td>1.319480e+11</td>      <td>1.345390e+11</td>      <td>1.187450e+11</td>    </tr>    <tr>      <th>Net Tangible Assets</th>      <td>6.309000e+10</td>      <td>6.428000e+10</td>      <td>6.917800e+10</td>      <td>6.622400e+10</td>    </tr>    <tr>      <th>Short Term Investments</th>      <td>2.769900e+10</td>      <td>2.764600e+10</td>      <td>3.136800e+10</td>      <td>4.081600e+10</td>    </tr>    <tr>      <th>Net Receivables</th>      <td>5.150600e+10</td>      <td>3.390800e+10</td>      <td>3.303600e+10</td>      <td>5.862000e+10</td>    </tr>    <tr>      <th>Long Term Debt</th>      <td>1.091060e+11</td>      <td>1.057520e+11</td>      <td>1.086420e+11</td>      <td>9.928100e+10</td>    </tr>    <tr>      <th>Inventory</th>      <td>6.580000e+09</td>      <td>5.178000e+09</td>      <td>5.219000e+09</td>      <td>4.973000e+09</td>    </tr>    <tr>      <th>Accounts Payable</th>      <td>5.476300e+10</td>      <td>4.040900e+10</td>      <td>4.012700e+10</td>      <td>6.384600e+10</td>    </tr>  </tbody></table></div><h4 id="年度现金流-cashflow"><a href="#年度现金流-cashflow" class="headerlink" title="年度现金流 - cashflow"></a>年度现金流 - cashflow</h4><p>只显示最近四个财务统计期</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_cashflow <span class="token operator">=</span> aapl<span class="token punctuation">.</span>cashflowaapl_cashflow<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>2021-09-25</th>      <th>2020-09-26</th>      <th>2019-09-28</th>      <th>2018-09-29</th>    </tr>  </thead>  <tbody>    <tr>      <th>Investments</th>      <td>-2.819000e+09</td>      <td>5.335000e+09</td>      <td>5.809300e+10</td>      <td>3.084500e+10</td>    </tr>    <tr>      <th>Change To Liabilities</th>      <td>1.400200e+10</td>      <td>-1.981000e+09</td>      <td>-2.548000e+09</td>      <td>9.172000e+09</td>    </tr>    <tr>      <th>Total Cashflows From Investing Activities</th>      <td>-1.454500e+10</td>      <td>-4.289000e+09</td>      <td>4.589600e+10</td>      <td>1.606600e+10</td>    </tr>    <tr>      <th>Net Borrowings</th>      <td>1.266500e+10</td>      <td>2.499000e+09</td>      <td>-7.819000e+09</td>      <td>4.320000e+08</td>    </tr>    <tr>      <th>Total Cash From Financing Activities</th>      <td>-9.335300e+10</td>      <td>-8.682000e+10</td>      <td>-9.097600e+10</td>      <td>-8.787600e+10</td>    </tr>    <tr>      <th>Change To Operating Activities</th>      <td>-6.146000e+09</td>      <td>8.810000e+08</td>      <td>-8.960000e+08</td>      <td>3.001600e+10</td>    </tr>    <tr>      <th>Issuance Of Stock</th>      <td>1.105000e+09</td>      <td>8.800000e+08</td>      <td>7.810000e+08</td>      <td>6.690000e+08</td>    </tr>    <tr>      <th>Net Income</th>      <td>9.468000e+10</td>      <td>5.741100e+10</td>      <td>5.525600e+10</td>      <td>5.953100e+10</td>    </tr>    <tr>      <th>Change In Cash</th>      <td>-3.860000e+09</td>      <td>-1.043500e+10</td>      <td>2.431100e+10</td>      <td>5.624000e+09</td>    </tr>    <tr>      <th>Repurchase Of Stock</th>      <td>-9.252700e+10</td>      <td>-7.599200e+10</td>      <td>-6.971400e+10</td>      <td>-7.526500e+10</td>    </tr>    <tr>      <th>Total Cash From Operating Activities</th>      <td>1.040380e+11</td>      <td>8.067400e+10</td>      <td>6.939100e+10</td>      <td>7.743400e+10</td>    </tr>    <tr>      <th>Depreciation</th>      <td>1.128400e+10</td>      <td>1.105600e+10</td>      <td>1.254700e+10</td>      <td>1.090300e+10</td>    </tr>    <tr>      <th>Other Cashflows From Investing Activities</th>      <td>-6.080000e+08</td>      <td>-7.910000e+08</td>      <td>-1.078000e+09</td>      <td>-7.450000e+08</td>    </tr>    <tr>      <th>Dividends Paid</th>      <td>-1.446700e+10</td>      <td>-1.408100e+10</td>      <td>-1.411900e+10</td>      <td>-1.371200e+10</td>    </tr>    <tr>      <th>Change To Inventory</th>      <td>-2.642000e+09</td>      <td>-1.270000e+08</td>      <td>-2.890000e+08</td>      <td>8.280000e+08</td>    </tr>    <tr>      <th>Change To Account Receivables</th>      <td>-1.012500e+10</td>      <td>6.917000e+09</td>      <td>2.450000e+08</td>      <td>-5.322000e+09</td>    </tr>    <tr>      <th>Other Cashflows From Financing Activities</th>      <td>-1.290000e+08</td>      <td>-1.260000e+08</td>      <td>-1.050000e+08</td>      <td>-1.050000e+08</td>    </tr>    <tr>      <th>Change To Netincome</th>      <td>2.985000e+09</td>      <td>6.517000e+09</td>      <td>5.076000e+09</td>      <td>-2.769400e+10</td>    </tr>    <tr>      <th>Capital Expenditures</th>      <td>-1.108500e+10</td>      <td>-7.309000e+09</td>      <td>-1.049500e+10</td>      <td>-1.331300e+10</td>    </tr>  </tbody></table></div><h4 id="季度现金流-quarterly-cashflow"><a href="#季度现金流-quarterly-cashflow" class="headerlink" title="季度现金流 - quarterly_cashflow"></a>季度现金流 - quarterly_cashflow</h4><p>只显示最近四个财务统计期</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_quarterly_cashflow <span class="token operator">=</span> aapl<span class="token punctuation">.</span>quarterly_cashflowaapl_quarterly_cashflow<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>2021-09-25</th>      <th>2021-06-26</th>      <th>2021-03-27</th>      <th>2020-12-26</th>    </tr>  </thead>  <tbody>    <tr>      <th>Investments</th>      <td>4.608000e+09</td>      <td>5.747000e+09</td>      <td>-7.895000e+09</td>      <td>-5.279000e+09</td>    </tr>    <tr>      <th>Change To Liabilities</th>      <td>1.405000e+10</td>      <td>3.070000e+08</td>      <td>-2.336600e+10</td>      <td>2.301100e+10</td>    </tr>    <tr>      <th>Total Cashflows From Investing Activities</th>      <td>8.350000e+08</td>      <td>3.572000e+09</td>      <td>-1.036800e+10</td>      <td>-8.584000e+09</td>    </tr>    <tr>      <th>Net Borrowings</th>      <td>3.220000e+09</td>      <td>3.220000e+09</td>      <td>1.042300e+10</td>      <td>-9.780000e+08</td>    </tr>    <tr>      <th>Total Cash From Financing Activities</th>      <td>-2.038200e+10</td>      <td>-2.939600e+10</td>      <td>-1.132600e+10</td>      <td>-3.224900e+10</td>    </tr>    <tr>      <th>Change To Operating Activities</th>      <td>-5.602000e+09</td>      <td>-6.048000e+09</td>      <td>1.126500e+10</td>      <td>-5.761000e+09</td>    </tr>    <tr>      <th>Issuance Of Stock</th>      <td>5.440000e+08</td>      <td>5.440000e+08</td>      <td>5.610000e+08</td>      <td>5.610000e+08</td>    </tr>    <tr>      <th>Net Income</th>      <td>2.055100e+10</td>      <td>2.174400e+10</td>      <td>2.363000e+10</td>      <td>2.875500e+10</td>    </tr>    <tr>      <th>Change In Cash</th>      <td>6.530000e+08</td>      <td>-4.730000e+09</td>      <td>2.287000e+09</td>      <td>-2.070000e+09</td>    </tr>    <tr>      <th>Repurchase Of Stock</th>      <td>-2.044900e+10</td>      <td>-2.559500e+10</td>      <td>-1.884700e+10</td>      <td>-2.763600e+10</td>    </tr>    <tr>      <th>Total Cash From Operating Activities</th>      <td>2.020000e+10</td>      <td>2.109400e+10</td>      <td>2.398100e+10</td>      <td>3.876300e+10</td>    </tr>    <tr>      <th>Depreciation</th>      <td>2.989000e+09</td>      <td>2.832000e+09</td>      <td>2.797000e+09</td>      <td>2.666000e+09</td>    </tr>    <tr>      <th>Other Cashflows From Investing Activities</th>      <td>-5.300000e+08</td>      <td>-7.800000e+07</td>      <td>-2.040000e+08</td>      <td>2.040000e+08</td>    </tr>    <tr>      <th>Dividends Paid</th>      <td>-3.640000e+09</td>      <td>-3.767000e+09</td>      <td>-3.447000e+09</td>      <td>-3.613000e+09</td>    </tr>    <tr>      <th>Change To Inventory</th>      <td>-1.429000e+09</td>      <td>1.300000e+07</td>      <td>-2.760000e+08</td>      <td>-9.500000e+08</td>    </tr>    <tr>      <th>Change To Account Receivables</th>      <td>-8.809000e+09</td>      <td>1.031000e+09</td>      <td>8.598000e+09</td>      <td>-1.094500e+10</td>    </tr>    <tr>      <th>Other Cashflows From Financing Activities</th>      <td>-5.700000e+07</td>      <td>-3.400000e+07</td>      <td>-1.600000e+07</td>      <td>-2.200000e+07</td>    </tr>    <tr>      <th>Change To Netincome</th>      <td>-1.550000e+09</td>      <td>1.215000e+09</td>      <td>1.333000e+09</td>      <td>1.987000e+09</td>    </tr>    <tr>      <th>Capital Expenditures</th>      <td>-3.223000e+09</td>      <td>-2.093000e+09</td>      <td>-2.269000e+09</td>      <td>-3.500000e+09</td>    </tr>  </tbody></table></div><h3 id="其他信息"><a href="#其他信息" class="headerlink" title="其他信息"></a>其他信息</h3><h4 id="证券的ISIN号-isin"><a href="#证券的ISIN号-isin" class="headerlink" title="证券的ISIN号 - isin"></a>证券的ISIN号 - isin</h4><p>ISIN表征国际证券识别码（英文：International Securities Identification Number，缩写：ISIN），辨别各种证券，是独一无二的编码。相同公司可能在多地上市，不同的证券交易市场会给与不同的股票代码，但是它的ISIN都是一样的。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_isin <span class="token operator">=</span> aapl<span class="token punctuation">.</span>isinaapl_isin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>'US0378331005'</code></pre><h4 id="大机构的推荐信息-recommendations"><a href="#大机构的推荐信息-recommendations" class="headerlink" title="大机构的推荐信息 - recommendations"></a>大机构的推荐信息 - recommendations</h4><p>通过该函数可以获取各大机构在不同时期对该股票做的推荐信息，以下显示最近5个推荐记录。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_recommendations <span class="token operator">=</span> aapl<span class="token punctuation">.</span>recommendationsaapl_recommendations<span class="token punctuation">.</span>tail<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Firm</th>      <th>To Grade</th>      <th>From Grade</th>      <th>Action</th>    </tr>    <tr>      <th>Date</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2021-10-19 12:55:08</th>      <td>DA Davidson</td>      <td>Buy</td>      <td></td>      <td>main</td>    </tr>    <tr>      <th>2021-10-27 13:11:01</th>      <td>Morgan Stanley</td>      <td>Overweight</td>      <td></td>      <td>main</td>    </tr>    <tr>      <th>2021-10-29 10:56:50</th>      <td>Oppenheimer</td>      <td>Outperform</td>      <td></td>      <td>main</td>    </tr>    <tr>      <th>2021-10-29 11:16:45</th>      <td>Barclays</td>      <td>Equal-Weight</td>      <td></td>      <td>main</td>    </tr>    <tr>      <th>2021-10-29 11:41:38</th>      <td>Morgan Stanley</td>      <td>Overweight</td>      <td></td>      <td>main</td>    </tr>  </tbody></table></div><h4 id="后续期权到期时间-options"><a href="#后续期权到期时间-options" class="headerlink" title="后续期权到期时间 - options"></a>后续期权到期时间 - options</h4><p>以下显示最近5个期权到期时间</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_options <span class="token operator">=</span> aapl<span class="token punctuation">.</span>optionsaapl<span class="token punctuation">.</span>options<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>('2021-12-17', '2021-12-23', '2021-12-31', '2022-01-07', '2022-01-14')</code></pre><h4 id="相关新闻-news"><a href="#相关新闻-news" class="headerlink" title="相关新闻 - news"></a>相关新闻 - news</h4><p>以下打印最近的一条新闻</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_news <span class="token operator">=</span> aapl<span class="token punctuation">.</span>newsaapl_news<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>{'uuid': 'e6b5cca0-ce6d-35bf-9d41-b9d2723aa129', 'title': 'Biden Team Mulls New Clampdown on China’s Largest Chipmaker', 'publisher': 'Bloomberg', 'link': 'https://finance.yahoo.com/news/biden-team-considers-clampdown-china-231703320.html', 'providerPublishTime': 1639556151, 'type': 'STORY'}</code></pre><h4 id="股票分析预测信息-analysis"><a href="#股票分析预测信息-analysis" class="headerlink" title="股票分析预测信息 - analysis"></a>股票分析预测信息 - analysis</h4><p>可以获取当季，下一季度，下一财年等的分析预测信息，以下打印当季分析信息。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl_analysis <span class="token operator">=</span> aapl<span class="token punctuation">.</span>analysisaapl_analysis<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>Max Age                                                   1End Date                                2021-12-31 00:00:00Growth                                                0.119Earnings Estimate Avg                                 1.880Earnings Estimate Low                                 1.750Earnings Estimate High                                1.970Earnings Estimate Year Ago Eps                        1.680Earnings Estimate Number Of Analysts                 25.000Earnings Estimate Growth                              0.119Revenue Estimate Avg                       118137000000.000Revenue Estimate Low                       111806000000.000Revenue Estimate High                      121303000000.000Revenue Estimate Number Of Analysts                  22.000Revenue Estimate Year Ago Revenue                       NaNRevenue Estimate Growth                                 NaNEps Trend Current                                     1.880Eps Trend 7Days Ago                                   1.880Eps Trend 30Days Ago                                  1.880Eps Trend 60Days Ago                                  1.870Eps Trend 90Days Ago                                  1.870Eps Revisions Up Last7Days                            1.000Eps Revisions Up Last30Days                           2.000Eps Revisions Down Last30Days                         0.000Eps Revisions Down Last90Days                           NaNName: 0Q, dtype: object</code></pre><h4 id="可持续金融信息-sustainability"><a href="#可持续金融信息-sustainability" class="headerlink" title="可持续金融信息 - sustainability"></a>可持续金融信息 - sustainability</h4><p>可持续金融用来衡量企业追求环境目标，尤其是促进能源转型的金融法规，标准，规范和产品。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">aapl<span class="token punctuation">.</span>sustainability<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Value</th>    </tr>    <tr>      <th>2021-9</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>palmOil</th>      <td>False</td>    </tr>    <tr>      <th>controversialWeapons</th>      <td>False</td>    </tr>    <tr>      <th>gambling</th>      <td>False</td>    </tr>    <tr>      <th>socialScore</th>      <td>7.99</td>    </tr>    <tr>      <th>nuclear</th>      <td>False</td>    </tr>    <tr>      <th>furLeather</th>      <td>False</td>    </tr>    <tr>      <th>alcoholic</th>      <td>False</td>    </tr>    <tr>      <th>gmo</th>      <td>False</td>    </tr>    <tr>      <th>catholic</th>      <td>False</td>    </tr>    <tr>      <th>socialPercentile</th>      <td>None</td>    </tr>    <tr>      <th>peerCount</th>      <td>53</td>    </tr>    <tr>      <th>governanceScore</th>      <td>8.64</td>    </tr>    <tr>      <th>environmentPercentile</th>      <td>None</td>    </tr>    <tr>      <th>animalTesting</th>      <td>False</td>    </tr>    <tr>      <th>tobacco</th>      <td>False</td>    </tr>    <tr>      <th>totalEsg</th>      <td>16.92</td>    </tr>    <tr>      <th>highestControversy</th>      <td>3</td>    </tr>    <tr>      <th>esgPerformance</th>      <td>UNDER_PERF</td>    </tr>    <tr>      <th>coal</th>      <td>False</td>    </tr>    <tr>      <th>pesticides</th>      <td>False</td>    </tr>    <tr>      <th>adult</th>      <td>False</td>    </tr>    <tr>      <th>percentile</th>      <td>13.68</td>    </tr>    <tr>      <th>peerGroup</th>      <td>Technology Hardware</td>    </tr>    <tr>      <th>smallArms</th>      <td>False</td>    </tr>    <tr>      <th>environmentScore</th>      <td>0.29</td>    </tr>    <tr>      <th>governancePercentile</th>      <td>None</td>    </tr>    <tr>      <th>militaryContract</th>      <td>False</td>    </tr>  </tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 量化投资 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> yfinance </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NumPy：快速创建数组（Array）</title>
      <link href="/20211214/numpy-kuai-su-chuang-jian-shu-zu-array/"/>
      <url>/20211214/numpy-kuai-su-chuang-jian-shu-zu-array/</url>
      
        <content type="html"><![CDATA[<h2 id="快速创建数组（Array）"><a href="#快速创建数组（Array）" class="headerlink" title="快速创建数组（Array）"></a>快速创建数组（Array）</h2><p>NumPy为Python提供了高阶数组与矩阵运算，因此数组（Array）也成为使用NumPy的最基本数据单元，本Note记录如何快速的创建数组。</p><h3 id="将Python-List转换成数组"><a href="#将Python-List转换成数组" class="headerlink" title="将Python List转换成数组"></a>将Python List转换成数组</h3><p>如果有现成的Python list，则可以直接通过numpy.array()函数将Python list转成NumPy数组。如下为一维数组实例。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npa_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>a_list<span class="token punctuation">)</span> <span class="token comment"># array([1, 2, 3, 4])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>多维数组实例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">b_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">range</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>i<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>b_list<span class="token punctuation">)</span><span class="token comment"># array([[1, 2, 3],</span><span class="token comment">#        [3, 4, 5],</span><span class="token comment">#        [5, 6, 7]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="zeros-生成全0数组"><a href="#zeros-生成全0数组" class="headerlink" title="zeros()生成全0数组"></a>zeros()生成全0数组</h3><p>dtype可以用来限制生成数组内数据类型，默认为float。如下为一维数组实例</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token comment"># array([0, 0, 0, 0, 0])</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="ones-生成全1数组"><a href="#ones-生成全1数组" class="headerlink" title="ones()生成全1数组"></a>ones()生成全1数组</h3><p>功能同zeros()，ones()可以用来生成全1数组。如下为3x5数组实例。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token comment"># array([[1, 1, 1, 1, 1],</span><span class="token comment">#        [1, 1, 1, 1, 1],</span><span class="token comment">#        [1, 1, 1, 1, 1]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="full-生成同一值数组"><a href="#full-生成同一值数组" class="headerlink" title="full()生成同一值数组"></a>full()生成同一值数组</h3><p>类似全0和全1，full()可以用来生成由同一值组成的数组。如下为3x5且每一个元素均为2.4的数组实例。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>full<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2.4</span><span class="token punctuation">)</span><span class="token comment"># array([[2.4, 2.4, 2.4, 2.4, 2.4],</span><span class="token comment">#        [2.4, 2.4, 2.4, 2.4, 2.4],</span><span class="token comment">#        [2.4, 2.4, 2.4, 2.4, 2.4]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这个数组也可以用zeros()和ones()来实现。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2.4</span><span class="token comment"># array([[2.4, 2.4, 2.4, 2.4, 2.4],</span><span class="token comment">#        [2.4, 2.4, 2.4, 2.4, 2.4],</span><span class="token comment">#        [2.4, 2.4, 2.4, 2.4, 2.4]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2.4</span><span class="token comment"># array([[2.4, 2.4, 2.4, 2.4, 2.4],</span><span class="token comment">#        [2.4, 2.4, 2.4, 2.4, 2.4],</span><span class="token comment">#        [2.4, 2.4, 2.4, 2.4, 2.4]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="arange-生成由递增数列组成的数组"><a href="#arange-生成由递增数列组成的数组" class="headerlink" title="arange()生成由递增数列组成的数组"></a>arange()生成由递增数列组成的数组</h3><p>如下实例，生成从0到18递增（增幅为2）的数组。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># array([ 0,  2,  4,  6,  8, 10, 12, 14, 16, 18])</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="linspace-生成由递增数列组成的数组"><a href="#linspace-生成由递增数列组成的数组" class="headerlink" title="linspace()生成由递增数列组成的数组"></a>linspace()生成由递增数列组成的数组</h3><p>使用arange()时，我们知道数列的增幅为多少，如果不知道增幅，可以使用lingspace()，如下实例创建一个在0到1之间均匀的生成5个值的数组。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># array([0.  , 0.25, 0.5 , 0.75, 1.  ])</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="随机值组成的数组"><a href="#随机值组成的数组" class="headerlink" title="随机值组成的数组"></a>随机值组成的数组</h3><p>使用random.random()可以生成一个均匀分布的随机值组成的数组</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># array([[0.61138824, 0.54712149, 0.40095232, 0.39771161, 0.0281933 ],</span><span class="token comment">#        [0.08123355, 0.41283792, 0.00461631, 0.12341322, 0.86842517],</span><span class="token comment">#        [0.93693765, 0.97597066, 0.30344276, 0.8472288 , 0.80629387]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>使用random.norm()可以生成一个均值为0，方差为1的正态分布的随机值组成的数组。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># array([[ 1.30565338, -1.08954521, -0.209259  ,  0.85940426,  0.68683533],</span><span class="token comment">#        [ 1.20633136,  2.57417898,  0.43243003,  0.3559354 ,  0.82257559],</span><span class="token comment">#        [-1.11870164,  0.04259074,  1.7639825 , -0.30045559,  2.50982843]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>使用random.randint()可以生成一个在给定范围内随机选择的整数组成的数组。如下实例生成一个在0（含）到10（不含）之间随机选择组成的3x5整数数组。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># array([[0, 7, 0, 9, 9],</span><span class="token comment">#        [4, 4, 8, 2, 8],</span><span class="token comment">#        [8, 2, 0, 7, 2]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="eye-生成单位矩阵"><a href="#eye-生成单位矩阵" class="headerlink" title="eye()生成单位矩阵"></a>eye()生成单位矩阵</h3><p>单位矩阵是一个对角线元素为1，其余元素均为0的矩阵。以下实例生成一个5*5的单位矩阵。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>eye<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token comment"># array([[1., 0., 0., 0., 0.],</span><span class="token comment">#        [0., 1., 0., 0., 0.],</span><span class="token comment">#        [0., 0., 1., 0., 0.],</span><span class="token comment">#        [0., 0., 0., 1., 0.],</span><span class="token comment">#        [0., 0., 0., 0., 1.]])</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python数据分析：导入在线范例数据集</title>
      <link href="/20211213/python-shu-ju-fen-xi-dao-ru-zai-xian-fan-li-shu-ju-ji/"/>
      <url>/20211213/python-shu-ju-fen-xi-dao-ru-zai-xian-fan-li-shu-ju-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="导入在线范例数据集"><a href="#导入在线范例数据集" class="headerlink" title="导入在线范例数据集"></a>导入在线范例数据集</h2><p>在做数据分析时，经常要使用范例数据集来做模型验证和演示等，其中Iris花卉数据集就是一个比较常见的统计范例数据。该数据包含150个样本，都属于Iris下面三个亚属，数据集通过记录花萼长度和宽度，花瓣长度和宽度，以及所属亚属来表征一个记录。这个数据集是公共可用的，Python的一些包也内嵌了这个数据集，我们可以通过以下方式来直接获取。</p><h3 id="pandas"><a href="#pandas" class="headerlink" title="pandas"></a>pandas</h3><p>从Pandas 0.19.2版本开始，如果知道范例数据集的URL，可以直接通过read_csv()的方式将数据集读取。以下以如何获取Iris数据集为例，更多的范例数据集的URL可以从<a href="https://vincentarelbundock.github.io/Rdatasets/datasets.html">此链接</a>获取。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdiris <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'https://raw.githubusercontent.com/mwaskom/seaborn-data/master/iris.csv'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>以上方式可能涉及到认证，也可以通过利用request包读取网页内容，然后将内容传递给pandas的方式来读取范例数据集。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> io<span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'https://raw.githubusercontent.com/mwaskom/seaborn-data/master/iris.csv'</span>url_content <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>contentiris <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>io<span class="token punctuation">.</span>StringIO<span class="token punctuation">(</span>url_content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很多Python包实际已经内嵌了Iris数据集，以下是常见的几个包以及获取Iris数据集的方式。</p><h3 id="statsmodels"><a href="#statsmodels" class="headerlink" title="statsmodels"></a>statsmodels</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> smiris <span class="token operator">=</span> sm<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>get_rdataset<span class="token punctuation">(</span><span class="token string">'iris'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="pydataset"><a href="#pydataset" class="headerlink" title="pydataset"></a>pydataset</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pydataset <span class="token keyword">import</span> datairis <span class="token operator">=</span> data<span class="token punctuation">(</span><span class="token string">'iris'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="scikit-learn"><a href="#scikit-learn" class="headerlink" title="scikit-learn"></a>scikit-learn</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> load_irisiris <span class="token operator">=</span> load_iris<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>以上导入的不是Pandas的dataframe格式，还需要通过以下代码将导出数据集转成dataframe格式。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npiris <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span> np<span class="token punctuation">.</span>c_<span class="token punctuation">[</span>iris<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> iris<span class="token punctuation">[</span><span class="token string">'target'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> columns<span class="token operator">=</span> iris<span class="token punctuation">[</span><span class="token string">'feature_names'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token string">'target'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="seaborn"><a href="#seaborn" class="headerlink" title="seaborn"></a>seaborn</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> seaborn <span class="token keyword">as</span> snsiris <span class="token operator">=</span> sns<span class="token punctuation">.</span>load_dataset<span class="token punctuation">(</span><span class="token string">'iris'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="quilt"><a href="#quilt" class="headerlink" title="quilt"></a>quilt</h3><p>更多Quilt的介绍见官网：<a href="https://docs.quiltdata.com/">Introduction - quilt (quiltdata.com)</a></p><p>在读取数据集之前，需要在shell通过quilt将数据集下载下来：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">quilt install uciml/iris<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以下即通过quilt读取范例数据集Iris的方式：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> quilt<span class="token punctuation">.</span>data<span class="token punctuation">.</span>uciml<span class="token punctuation">.</span>iris <span class="token keyword">as</span> iriris <span class="token operator">=</span> ir<span class="token punctuation">.</span>tables<span class="token punctuation">.</span>iris<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p>This note is inspired by the following references: </p><p><a href="https://stackoverflow.com/questions/28417293/sample-datasets-in-pandas">python - Sample datasets in Pandas - Stack Overflow</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pandas </tag>
            
            <tag> statsmodels </tag>
            
            <tag> pydataset </tag>
            
            <tag> seaborn </tag>
            
            <tag> scikit-learn </tag>
            
            <tag> quilt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建Python运行的虚拟环境</title>
      <link href="/20211212/chuang-jian-python-yun-xing-de-xu-ni-huan-jing/"/>
      <url>/20211212/chuang-jian-python-yun-xing-de-xu-ni-huan-jing/</url>
      
        <content type="html"><![CDATA[<h1 id="创建Python运行的虚拟环境"><a href="#创建Python运行的虚拟环境" class="headerlink" title="创建Python运行的虚拟环境"></a>创建Python运行的虚拟环境</h1><p>当运行不同的Python项目时，所需要的Python包可能依赖的Python版本不一致，为了“隔离”出一个Python运行环境，在不同的项目运行不同的Python版本而对全局Python版本不产生影响，虚拟环境就是一个很好的手段。</p><h2 id="创建当前Python版本的虚拟环境"><a href="#创建当前Python版本的虚拟环境" class="headerlink" title="创建当前Python版本的虚拟环境"></a>创建当前Python版本的虚拟环境</h2><p>使用<span style="background-color:  #d0d3d4">venv</span>包直接生成虚拟环境myenv</p><pre><code>python3 -m venv myenv</code></pre><p>激活该虚拟环境</p><pre><code>source myenv/bin/activate</code></pre><p>退出该虚拟环境</p><pre><code>deactivate</code></pre><h2 id="创建特定Python版本的虚拟环境"><a href="#创建特定Python版本的虚拟环境" class="headerlink" title="创建特定Python版本的虚拟环境"></a>创建特定Python版本的虚拟环境</h2><p>由于目前新的Ubuntu版本（20.04）的Python3版本都是默认3.8，如果需要创建Python 3.7或者更老版本的虚拟环境，首先需要从<a href="https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa">deadsnakes PPA</a>下载Python3.7.</p><pre><code>sudo add-apt-repository ppa:deadsnakes/ppasudo apt-get updatesudo apt-get install python3.7</code></pre><p>安装好Python 3.7以后可以开始创建虚拟环境，首先安装<span style="background-color:  #d0d3d4">virtualenv</span>包。</p><pre><code>python3.7 -m pip install virtualenv</code></pre><p>新建虚拟环境</p><pre><code>python3.7 -m virtualenv myenv</code></pre><p>激活该虚拟环境</p><pre><code>source myenv/bin/activate</code></pre><p> 退出该虚拟环境</p><pre><code> deactivate</code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为GitHub Pages上的个人博客绑定GoDaddy域名</title>
      <link href="/20211211/wei-github-page-shang-de-ge-ren-bo-ke-bang-ding-godaddy-yu-ming/"/>
      <url>/20211211/wei-github-page-shang-de-ge-ren-bo-ke-bang-ding-godaddy-yu-ming/</url>
      
        <content type="html"><![CDATA[<h1 id="为GitHub-Pages上的个人博客绑定GoDaddy域名"><a href="#为GitHub-Pages上的个人博客绑定GoDaddy域名" class="headerlink" title="为GitHub Pages上的个人博客绑定GoDaddy域名"></a>为GitHub Pages上的个人博客绑定GoDaddy域名</h1><p>很多人通过GitHub Pages来搭建自己的博客网站，默认的地址一般是username.github.io，这里的username一般是你GitHub的用户名。这样的地址不被记住，同时GitHub Pages也提供绑定个人域名的功能，所以如果有比较好记忆的域名可以通过GitHub Pages来绑定，通过直接访问域名的方式（而不是username.github.io）来访问挂载在GitHub上的个人博客网站。</p><p>本博客的域名在GoDaddy上购买，点击进入GoDaddy个人域名DNS配置后，将     185.199.108.153，185.199.109.153，185.199.110.153，185.199.111.153这几个IP地址加入到A记录，将个人原Github博客地址username.github.io（将username替换成个人用户名）添加到CNAME记录。针对本博客的A记录和CNAME记录如下截图。</p><p><img src="https://media.publit.io/file/Godaddy-dns.png" alt="GoDaddy DNS" title="GoDaddy DNS"></p><ul><li>A记录：将一个域名解析到一个IP地址，如上面例子即将个人域名解析到那四个配置的IP地址</li><li>CNAME记录：将一个域名解析到另外一个域名，如上面例子及将个人域名解析到username.github.io</li></ul><p>将上述配置好后，然后返回到GitHub Pages配置页，在Custom domain填上个人域名（对于本博客就是<a href="http://www.wenvenn.com/">www.wenvenn.com</a> ），点击Save以后GitHub会自动检测DNS，如果通过的话在填写的域名后面可以看到一个绿色的钩，这里建议同时勾选HTTPS。如下截图。</p><p><img src="https://media.publit.io/file/Github-custom-domain.png" alt="GitHub Pages Custom Domain" title="GitHub Pages Custom Domain"></p><p>有时候在GoDaddy上注册个人域名并配置DNS后不一定会马上生效，这里涉及到DNS广播，一般耗时几个小时，最长48个小时，个人可以通过<a href="https://dnschecker.org/">DNS Checker</a> 或者<a href="https://www.whatsmydns.net/">What’s My DNS</a> 这两个网站来查询DNS状态，如果都打钩的话说明已经OK了。</p>]]></content>
      
      
      <categories>
          
          <category> 奇淫技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> 个人网站 </tag>
            
            <tag> DNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Ubuntu上安装Markdown编辑器Remarkable</title>
      <link href="/20211207/zai-ubuntu-shang-an-zhuang-markdown-bian-ji-qi-remarkable/"/>
      <url>/20211207/zai-ubuntu-shang-an-zhuang-markdown-bian-ji-qi-remarkable/</url>
      
        <content type="html"><![CDATA[<h2 id="在Ubuntu上安装Markdown编辑器Remarkable"><a href="#在Ubuntu上安装Markdown编辑器Remarkable" class="headerlink" title="在Ubuntu上安装Markdown编辑器Remarkable"></a>在Ubuntu上安装Markdown编辑器Remarkable</h2><p>Remarkable是一个非常简洁，轻便的用于Linux环境下开源的Markdown编辑器，支持GitHub风格的格式，支持代码高亮，也可以将md文件转成html和pdf格式，非常适合博客文章的写作。</p><p>由于依赖文件太老或者一些其他原因，<a href="https://remarkableapp.github.io/linux.html">官方网站</a> 上下载的deb文件不能够直接在Ubuntu 20.04上安装。有大神在GitHub上提供了一个<a href="https://github.com/seiferteric/remarkable_debfix">解决方案</a> ，该方案将依赖文件重新打包生成新的deb文件，以下是详细操作：</p><pre><code>git clone https://github.com/seiferteric/remarkable_debfix.gitcd remarkable_debfix/dpkg-deb -Z xz -b old_deb remarkable_1.87_all.deb</code></pre><p>新的deb文件生成后双击即可安装，也可以通过命令行进行安装。命令行安装依赖gdebi，需要提前安装gdebi-core。</p><pre><code>sudo apt-get install gdebi-core</code></pre><p>然后再安装Remarkable 1.87</p><pre><code>sudo gdebi remarkable_1.87_all.deb </code></pre>]]></content>
      
      
      <categories>
          
          <category> 奇淫技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Remarkable </tag>
            
            <tag> Markdown </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
